###################################################################################
###############   Written by Mark Snyder  Juniper Networks       ##################
###############   msnyder@juniper.net                            ##################
###################################################################################

{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Parameters": {
          "jnprtgwidremote" : {
            "Type": "String",
            "Description": "JNPR security  VPC Transit Gateway Id",
            "Default": "null"
          },
          "JNPRSECVPClogicalid": {
            "Type": "String",
            "Description": "Logical identifier Tag. ",
            "Default": "JNPR1234"
          },
          "PubKey": {
                "Type": "String",
                "Description": "pubkey used",
                "Default": "forg-eng"
          },
          "Addpupip": {
                "Type": "String",
                "Description": "pub ip to add to sec groups",
                "Default": "0.0.0.0/0"
          },
          "CIDR": {
                "Type": "String",
                "Description": "remote CIDR to use for VPC",
                "Default": "null"
          },
          "CIDRsub0":{
              "Type": "String",
              "Description": "remote CIDR to use for subnet",
              "Default": "null"
          },
          "CIDRsub1":{
              "Type": "String",
              "Description": "remote CIDR to use for subnet",
              "Default": "null"
          },
          "CIDRsub2":{
              "Type": "String",
              "Description": "remote CIDR to use for subnet",
              "Default": "null"
          },
          "CIDRsub3":{
              "Type": "String",
              "Description": "remote CIDR to use for subnet",
              "Default": "null"
          }
    },
    "Resources": {
        "JNPRSECVPC": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "CidrBlock": {"Ref":"CIDR"}
                        }
        },
        "Subnet0": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "JNPRSECVPC"
                },
                "CidrBlock": {"Ref":"CIDRsub0"},
                "AvailabilityZone" : {
                  "Fn::Select" : [
                    "0",
                    {
                      "Fn::GetAZs" : ""
                    }
                  ]
                }
            }
        },
        "Subnet1": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "JNPRSECVPC"
                          },
                "CidrBlock": {"Ref":"CIDRsub1"},
                "AvailabilityZone" : {
                  "Fn::Select" : [
                    "0",
                    {
                      "Fn::GetAZs" : ""
                    }
                  ]
                }
            }
        },
        "Subnet2": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "JNPRSECVPC"
                          },
                "CidrBlock": {"Ref":"CIDRsub2"},
                "AvailabilityZone" : {
                  "Fn::Select" : [
                    "0",
                    {
                      "Fn::GetAZs" : ""
                    }
                  ]
                }
            }
        },
        "Subnet3": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "JNPRSECVPC"
                          },
                "CidrBlock": {"Ref":"CIDRsub3"},
                "AvailabilityZone" : {
                  "Fn::Select" : [
                    "0",
                    {
                      "Fn::GetAZs" : ""
                    }
                  ]
                }
            }
        },
        "SECG0" : {
                  "Type" : "AWS::EC2::SecurityGroup",
                  "Properties" : {
                      "GroupDescription" : "JNPRSECGroup",
                      "SecurityGroupEgress" : [ {
                          "CidrIp" : "0.0.0.0/0",
                          "IpProtocol" : "-1"
                            }
                             ],
                      "SecurityGroupIngress" : [
                                  { "CidrIp" : { "Ref" : "Addpupip"}, "IpProtocol" : "-1", "ToPort" : "22" }
                                  ],
                      "VpcId": {
                          "Ref": "JNPRSECVPC"
                      }
                    }
                  },
        "SECG1" : {
                  "Type" : "AWS::EC2::SecurityGroup",
                  "Properties" : {
                      "GroupDescription" : "JNPRSECGroup",
                      "SecurityGroupEgress" : [ {
                          "CidrIp" : "0.0.0.0/0",
                          "IpProtocol" : "-1"
                            }
                             ],
                      "SecurityGroupIngress" : [
                        { "CidrIp" : { "Ref" : "Addpupip"}, "IpProtocol" : "-1", "ToPort" : "22" }
                                  ],
                      "VpcId": {
                          "Ref": "JNPRSECVPC"
                      }
                    }
                  },
        "SECG2" : {
                  "Type" : "AWS::EC2::SecurityGroup",
                  "Properties" : {
                      "GroupDescription" : "JNPRSECGroup",
                      "SecurityGroupEgress" : [ {
                          "CidrIp" : "0.0.0.0/0",
                          "IpProtocol" : "-1"
                            }
                             ],
                      "SecurityGroupIngress" : [
                        { "CidrIp" : { "Ref" : "Addpupip"}, "IpProtocol" : "-1", "ToPort" : "22" }
                                  ],
                      "VpcId": {
                          "Ref": "JNPRSECVPC"
                      }
                    }
                  },
        "SGBaseIngressSECG0": {
               "Type": "AWS::EC2::SecurityGroupIngress",
                    "Properties": {
                        "CidrIp" : "10.0.0.0/8",
                            "GroupId": {
                                "Ref": "SECG0"
                                },
                              "IpProtocol": "-1"
                        }
            },
        "SGBaseIngressSECG1": {
               "Type": "AWS::EC2::SecurityGroupIngress",
                    "Properties": {
                            "CidrIp" : "10.0.0.0/8",
                                "GroupId": {
                                    "Ref": "SECG1"
                                    },
                                  "IpProtocol": "-1"
                            }
                },
        "SGBaseIngressSECG2": {
               "Type": "AWS::EC2::SecurityGroupIngress",
                    "Properties": {
                            "CidrIp" : "10.0.0.0/8",
                                "GroupId": {
                                    "Ref": "SECG2"
                                    },
                                  "IpProtocol": "-1"
                            }
                },
        "RTblSN0": {
          "Type" : "AWS::EC2::RouteTable",
          "Properties" : {
            "VpcId": {
                "Ref": "JNPRSECVPC"
            }
            }
        },
        "RTblSN1": {
          "Type" : "AWS::EC2::RouteTable",
          "Properties" : {
            "VpcId": {
                "Ref": "JNPRSECVPC"
            }
            }
        },
        "RTblSN2": {
          "Type" : "AWS::EC2::RouteTable",
          "Properties" : {
            "VpcId": {
                "Ref": "JNPRSECVPC"
            }
            }
        },
        "RTblSN3": {
          "Type" : "AWS::EC2::RouteTable",
          "Properties" : {
            "VpcId": {
                "Ref": "JNPRSECVPC"
            }
            }
        },
        "RouteS0" : {
           "Type" : "AWS::EC2::Route",
           "DependsOn" : ["RTblSN0", "jnprtgwatc"],
           "Properties" : {
              "RouteTableId" : { "Ref" : "RTblSN0" },
              "DestinationCidrBlock" : "0.0.0.0/0",
              "TransitGatewayId" : { "Ref" : "jnprtgwidremote" }
           }
        },
        "RouteS1" : {
           "Type" : "AWS::EC2::Route",
           "DependsOn" : ["RTblSN1", "jnprtgwatc"],
           "Properties" : {
             "RouteTableId" : { "Ref" : "RTblSN1" },
             "DestinationCidrBlock" : "0.0.0.0/0",
             "TransitGatewayId" : { "Ref" : "jnprtgwidremote" }
           }
        },
        "RouteS2" : {
           "Type" : "AWS::EC2::Route",
           "DependsOn" : ["RTblSN2", "jnprtgwatc"],
           "Properties" : {
              "RouteTableId" : { "Ref" : "RTblSN2" },
              "DestinationCidrBlock" : "0.0.0.0/0",
              "TransitGatewayId" : { "Ref" : "jnprtgwidremote" }
           }
        },
        "RouteS3" : {
           "Type" : "AWS::EC2::Route",
           "DependsOn" : ["RTblSN3", "jnprtgwatc"],
           "Properties" : {
             "RouteTableId" : { "Ref" : "RTblSN3" },
             "DestinationCidrBlock" : "0.0.0.0/0",
             "TransitGatewayId" : { "Ref" : "jnprtgwidremote" }
           }
        },
        "SubnetAssRoute0" : {
          "Type" : "AWS::EC2::SubnetRouteTableAssociation",
          "Properties" : {
              "RouteTableId" : {"Ref" : "RTblSN0"},
              "SubnetId" : {"Ref" : "Subnet0"}
            }
        },
        "SubnetAssRoute1" : {
          "Type" : "AWS::EC2::SubnetRouteTableAssociation",
          "Properties" : {
              "RouteTableId" : {"Ref" : "RTblSN1"},
              "SubnetId" : {"Ref" : "Subnet1"}
            }
        },
        "SubnetAssRoute2" : {
          "Type" : "AWS::EC2::SubnetRouteTableAssociation",
          "Properties" : {
              "RouteTableId" : {"Ref" : "RTblSN2"},
              "SubnetId" : {"Ref" : "Subnet2"}
            }
        },
        "SubnetAssRoute3" : {
          "Type" : "AWS::EC2::SubnetRouteTableAssociation",
          "Properties" : {
              "RouteTableId" : {"Ref" : "RTblSN3"},
              "SubnetId" : {"Ref" : "Subnet3"}
            }
        },
        "jnprtgwatc" : {
          "Type" : "AWS::EC2::TransitGatewayAttachment",
          "Properties" : {
              "SubnetIds" : [ {"Ref": "Subnet3"}],
              "Tags" : [
                    {"Key" : "Name", "Value" : "jnprtgwatc"},
                    {"Key" : "JNPRSECVPClogicalid", "Value" : {"Ref" : "JNPRSECVPClogicalid"} }
              ],
              "TransitGatewayId" : {"Ref" : "jnprtgwidremote"},
              "VpcId" : {"Ref" : "JNPRSECVPC"},
            }
        },
        "CTOUexecute": {
            "Type": "AWS::IAM::Role",
                  "Properties" : {
                      "AssumeRolePolicyDocument" : {
                              "Version": "2012-10-17",
                              "Statement": [
                                  {
                                      "Effect": "Allow",
                                      "Principal": {
                                          "AWS": "arn:aws:iam::728681508792:role/ct-lamba-test-with-cft",
                                          "Service": "lambda.amazonaws.com"
                                      },
                                      "Action": "sts:AssumeRole"
                                  }
                              ]
                        },
                      "Description" : "Needed to delete default VPC",
                      "ManagedPolicyArns" : [ "arn:aws:iam::aws:policy/AdministratorAccess" ],
                      "RoleName" : "CTOUexecuterole4child"
                    }
        },
        "SSMCTOUexecute" : {
          "Type" : "AWS::SSM::Parameter",
          "Properties" : {
              "DataType" : "text",
              "Description" : "ARN for remote Accout role",
              "Name" : "_SSMjnprCTOUexecute",
              "Tier" : "Standard",
              "Type" : "String",
              "Value" : {"Fn::GetAtt" : ["CTOUexecute", "Arn"] }
            }
        },

    },

    "Outputs" : {
        "jnprtgwatc" :{
          "Value": {"Ref" : "jnprtgwatc"}
        },
        "CTOUexecute" :{
          "Value": {"Fn::GetAtt" : ["CTOUexecute", "Arn"] }
        }

    }
}
